package com.cquptkiller.a_guarder.view;

import android.app.ProgressDialog;
import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.cquptkiller.a_guarder.R;
import com.cquptkiller.a_guarder.adapter.MalwareAdapter;
import com.cquptkiller.a_guarder.data.AppInfo;
import com.cquptkiller.a_guarder.utils.GetModel;
import com.cquptkiller.a_guarder.utils.PermissionUtil;

import java.util.ArrayList;
import java.util.List;

import libsvm.svm;
import libsvm.svm_model;
import libsvm.svm_node;

public class MalwareActivity extends AppCompatActivity {

    public static ArrayList<AppInfo> malwareList = new ArrayList<>();
    RecyclerView recyclerView;
    MalwareAdapter malwareAdapter;
    ProgressDialog progressDialog;
    TextView tv_r;
    TextView tv_r1;
    ImageView iv;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_malware);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar_usual);
        setSupportActionBar(toolbar);
        toolbar.setTitle("风险软件");
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        progressDialog = new ProgressDialog
                (MalwareActivity.this);
        progressDialog.setTitle("正在检测");
        progressDialog.setMessage("扫描中...");
        progressDialog.setCancelable(true);
        progressDialog.show();
        try{
            scanApp();
        }catch (Exception e){
            Log.d("MalwareActivity", "onCreate: "+e.getMessage());
        }

            if (null == malwareList || malwareList.size() == 0) {
                iv = (ImageView) findViewById(R.id.imageView3);
                tv_r = (TextView) findViewById(R.id.tv_result);
                tv_r1 = (TextView) findViewById(R.id.tv_result1);

                iv.setBackgroundColor(getResources().getColor(R.color.colorPrimary));
                tv_r.setText("恭喜你！");
                tv_r1.setText("你的手机十分健康");
            } else {
                setRecyclerView();
            }
        progressDialog.dismiss();

    }

    private void scanApp() {

        PermissionUtil permissionUtil = new PermissionUtil();
        for (int i = 0; i < MainActivity.appList.size(); i++) {
            if (MainActivity.appList.get(i).getMyPermission() != null) {
                if (judgeApp(MainActivity.appList.get(i).getMyPermission().length,
                        permissionUtil.isInternet(MainActivity.appList.get(i).getAppName()),
                        permissionUtil.isSendMSM(MainActivity.appList.get(i).getAppName()),
                        permissionUtil.isPhoneCall(MainActivity.appList.get(i).getAppName()),
                        permissionUtil.isAceessLocal(MainActivity.appList.get(i).getAppName()),
                        permissionUtil.isReadContacts(MainActivity.appList.get(i).getAppName())
                ) == -1) {
                    if(compare(MainActivity.appList.get(i).getPackageName())==0)
                    malwareList.add(MainActivity.appList.get(i));
                    Log.d("999999", "scanApp: " + MainActivity.appList.get(i).getAppName());


                }
            }
        }

    }


    private void setRecyclerView() {
        Toast.makeText(MalwareActivity.this, "发现可以软件，请点击上云端分析！", Toast.LENGTH_SHORT).show();
        recyclerView = (RecyclerView) findViewById(R.id.recyclerview_malware_activity);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        malwareAdapter = new MalwareAdapter();
        recyclerView.setAdapter(malwareAdapter);
        malwareAdapter.setRecyclerViewListener(new MalwareAdapter.RecyclerViewListener() {
            @Override
            public void onClick(View view, int position) {
                Intent intent = new Intent(MalwareActivity.this, PermissonDetailActivity.class);
                intent.putExtra("position", position);
                intent.putExtra("jump_location",PermissonDetailActivity.MALWARE_ACTIVITY);
                startActivityForResult(intent,123);

            }
        });
    }
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        malwareAdapter.notifyDataSetChanged();
    }

    /**
     * 通过输入返回未知样本的预测类型
     *
     * @param PemNum   应用声明的权限数量
     * @param InterNet 是否有联网权限 有则传入1，无则传入0，以下同
     * @param TextMsg  是否有发短信的权限
     * @param Tel      是否有拨打电话的权限
     * @param Location 是否有获取位置信息的权限
     * @param Contacts 是否有读取联系人信息的权限
     * @return 预测结果 若为-1则为恶意软件，1则为正常软件
     */
    public int judgeApp(int PemNum, int InterNet, int TextMsg, int Tel, int Location, int Contacts) {
        svm_node[] pc = new GetModel().getTestData(PemNum, InterNet, TextMsg, Tel, Location, Contacts);
        svm_model model = new GetModel().main();
        return (int) svm.svm_predict(model, pc);
    }
    /**
     * @return 在白名单内返回1，不在则返回0
     */
    public int compare(String PackageName){
        int result = 0;
        List<String> whiteList = new ArrayList<String>();
        whiteList.add("com.taobao.trip");
        whiteList.add("com.baidu.input");
        whiteList.add("com.baidu.netdisk");
        whiteList.add("com.sdu.didi.psnger");
        whiteList.add("com.jingdong.app.mall");
        whiteList.add("com.sankuai.meituan");
        whiteList.add("com.sankuai.meituan.takeoutnew");
        whiteList.add("com.taobao.taobao");
        whiteList.add("com.baidu.tieba_mini");
        whiteList.add("com.baidu.tieba");
        whiteList.add("com.MobileTicket");
        whiteList.add("com.netease.cloudmusic");
        whiteList.add("com.tencent.mm");
        whiteList.add("com.taobao.fleamarket");
        whiteList.add("com.tencent.qt.qtl");
        whiteList.add("com.zdworks.android.zdlock");
        whiteList.add("com.eg.android.AlipayGphone");
        whiteList.add("com.adobe.flashplayer");
        whiteList.add("com.tencent.mobileqq");
        whiteList.add("com.tencent.androidqqmall");
        whiteList.add("com.UCMobile");
        whiteList.add("com.lbe.parallel");
        whiteList.add("com.alibaba.android.rimet");
        whiteList.add("com.tencent.qqpim");
        whiteList.add("com.dlj24pi.android");
        for(String get:whiteList){
            if(get.equals(PackageName)){
                result = 1;
                break;
            }
        }
        return result;
    }

}
